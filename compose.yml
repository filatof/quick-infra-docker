version: "3"
services:
  reverse-proxy:
    image: traefik:v3.1
    container_name: traefik
    command:
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--providers.docker"
      - "--log.level=DEBUG"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=proxynet"
      #entrypoints
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.http.http.redirections.entrypoint.to=https"
      - "--entrypoints.http.http.redirections.entrypoint.scheme=https"
      #letsencrypt
      - "--entrypoints.https.http.tls.certResolver=le"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=filatof@gmail.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.infrastruct.ru`)"
      - "traefik.http.routers.dashboard.entrypoints=https"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$9iOvY5h9$$hSckozXgXyRW3QPXfbPwa0"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt

  ldap:
    image: osixia/openldap
    container_name: openldap
    hostname: ldap.infrastruct.ru
    env_file:
      .env
    environment:
      LDAP_DOMAIN: infrastruct.ru
    volumes:
      - ./ldap/data/slapd/database:/var/lib/ldap
      - ./ldap/data/slapd/config:/etc/ldap/slapd.d

  ldap_admin:
    image: osixia/phpldapadmin
    container_name: phpldapadmin
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxynet"
      - "traefik.http.routers.ldap.rule=Host(`ldap.infrastruct.ru`)"
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: ldap.infrastruct.ru
      PHPLDAPADMIN_TRUST_PROXY_SSL: true
      PHPLDAPADMIN_HTTPS: false
  
  gitlab:
        image: gitlab/gitlab-ce:latest
        container_name: "gitlab"
        hostname: gitlab.infrastruct.ru
        restart: unless-stopped
        healthcheck:
          disable: true
        environment:
          GITLAB_OMNIBUS_CONFIG: |
            external_url 'https://gitlab.infrastruct.ru' 
            nginx['listen_port'] = 80
            nginx['listen_https'] = false
            nginx['proxy_set_headers'] = {
              "X-Forwarded-Proto" => "https",
              "X-Forwarded-Ssl" => "on"
            }
            gitlab_rails['gitlab_shell_ssh_port'] = 22
            gitlab_rails['smtp_enable'] = false

        ports:
          - "22:22"
        volumes:
          - ./gitlab/config:/etc/gitlab
          - ./gitlab/logs:/var/log/gitlab
          - ./gitlab/data:/var/opt/gitlab
        labels:
          - traefik.enable=true
          - "traefik.docker.network=proxynet"
          - traefik.http.middlewares.gitlab_https.redirectscheme.scheme=https
          - traefik.http.routers.gitlab.entrypoints=web
          - traefik.http.routers.gitlab.middlewares=gitlab_https@docker
          - traefik.http.routers.gitlab.rule=Host(`gitlab.infrastruct.ru`)
          - traefik.http.routers.gitlab_https.entrypoints=websecure
          - traefik.http.routers.gitlab_https.rule=Host(`gitlab.infrastruct.ru`)
          - traefik.http.routers.gitlab_https.tls=true
          - traefik.http.services.gitlab.loadbalancer.server.port=80

networks:
  default:
    name: proxynet
    external: true
    
  