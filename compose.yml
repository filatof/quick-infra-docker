version: "3"
services:
  reverse-proxy:
    image: traefik:v3.1
    container_name: traefik
    command:
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--providers.docker"
      - "--log.level=DEBUG"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=proxynet"
      #entrypoints
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.http.http.redirections.entrypoint.to=https"
      - "--entrypoints.http.http.redirections.entrypoint.scheme=https"
      #letsencrypt
      - "--entrypoints.https.http.tls.certResolver=le"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=filatof@gmail.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.infrastruct.ru`)"
      - "traefik.http.routers.dashboard.entrypoints=https"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$9iOvY5h9$$hSckozXgXyRW3QPXfbPwa0"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt

  ldap:
    image: osixia/openldap
    container_name: openldap
    hostname: ldap.infrastruct.ru
    env_file:
      .env
    environment:
      LDAP_DOMAIN: infrastruct.ru
    volumes:
      - ./ldap/data/slapd/database:/var/lib/ldap
      - ./ldap/data/slapd/config:/etc/ldap/slapd.d

  ldap_admin:
    image: osixia/phpldapadmin
    container_name: phpldapadmin
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxynet"
      - "traefik.http.routers.ldap.rule=Host(`ldap.infrastruct.ru`)"
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: ldap.infrastruct.ru
      PHPLDAPADMIN_TRUST_PROXY_SSL: true
      PHPLDAPADMIN_HTTPS: false
  
  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: "gitlab"
    hostname: gitlab.infrastruct.ru
    restart: unless-stopped
    healthcheck:
      disable: true
    env_file:
      .env
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://gitlab.infrastruct.ru'
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        nginx['proxy_set_headers'] = {
        "X-Forwarded-Proto" => "https",
        "X-Forwarded-Ssl" => "on"
        }
        gitlab_rails['gitlab_shell_ssh_port'] = 22
        gitlab_rails['smtp_enable'] = false

        gitlab_rails['ldap_enabled'] = true
        gitlab_rails['prevent_ldap_sign_in'] = false
        gitlab_rails['ldap_servers'] = {
          'main' => {
          'label' => 'LDAP',
          'host' =>  'ldap.infrastruct.ru',
          'port' => 636,
          'uid' => 'uid',
          'bind_dn' => 'CN=admin,DC=infrastruct,DC=ru',
          'password' => '$LDAP_ADMIN_PASSWORD',
          'encryption' => 'simple_tls',
          'verify_certificates' => false,
          'timeout' => 10,
          'active_directory' => false,
           #'user_filter' => '(employeeType=developer)',
          'base' => 'dc=infrastruct,dc=ru',
          'lowercase_usernames' => 'true',
           #'retry_empty_result_with_codes' => [80],
          'allow_username_or_email_login' => true,
          'block_auto_created_users' => false
              }
            }
    ports:
      - "22:22"
    volumes:
      - ./gitlab/config:/etc/gitlab
      - ./gitlab/logs:/var/log/gitlab
      - ./gitlab/data:/var/opt/gitlab
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxynet"
      - "traefik.http.routers.gitlab.entrypoints=http"
      - "traefik.http.routers.gitlab.rule=Host(`gitlab.infrastruct.ru`)"
      - "traefik.http.middlewares.gitlab-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.gitlab.middlewares=gitlab-https-redirect"
      - "traefik.http.routers.gitlab-secure.entrypoints=https"
      - "traefik.http.routers.gitlab-secure.rule=Host(`gitlab.infrastruct.ru`)"
      - "traefik.http.routers.gitlab-secure.tls=true"
      - "traefik.http.routers.gitlab-secure.tls.certresolver=le"
      - "traefik.http.routers.gitlab-secure.service=gitlab"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
      #- "traefik.http.routers.gitlab-registry.rule=Host(`registry.infrastruct.ru`)"
      #- "traefik.http.middlewares.gitlab_registry-https-redirect.redirectscheme.scheme=https"
      #- "traefik.http.routers.gitlab.middlewares=gitlab_registry-https-redirect"
      #- "traefik.http.routers.gitlab-registry.tls.certresolver=le"
      #- "traefik.http.routers.gitlab-registry.entrypoints=https"
      #- "traefik.http.routers.gitlab-registry.service=gitlab-registry"
      #- "traefik.http.services.gitlab-registry.loadbalancer.server.port=5005"
  
  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rocketchat.rule=Host(`chat.infrastruct.ru`)"
      - "traefik.http.routers.rocketchat.tls=true"
      - "traefik.http.routers.rocketchat.entrypoints=https"
      - "traefik.http.routers.rocketchat.tls.certresolver=le"
    environment:
      MONGO_URL: mongodb://mongodb:27017/rocketchat?replicaSet=rs0
      MONGO_OPLOG_URL: mongodb://mongodb:27017/local?replicaSet=rs0
      ROOT_URL: http://localhost:3000
      PORT: 3000
      DEPLOY_METHOD: docker
      
    depends_on:
      - mongodb
    ports:
      - "3000:3000"

  mongodb:
    image: docker.io/bitnami/mongodb
    restart: always
    volumes:
      - mongodb_data:/bitnami/mongodb
    environment:
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_PORT_NUMBER: 27017
      MONGODB_INITIAL_PRIMARY_HOST: mongodb
      MONGODB_INITIAL_PRIMARY_PORT_NUMBER: 27017
      MONGODB_ADVERTISED_HOSTNAME: mongodb
      MONGODB_ENABLE_JOURNAL: true
      ALLOW_EMPTY_PASSWORD: yes

networks:
  default:
    name: proxynet
    external: true
    
  